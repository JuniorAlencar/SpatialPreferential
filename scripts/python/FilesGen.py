import src.GenerateFunctions as FunctionsFile
import numpy as np
import pandas as pd
import os

# FunctionsFile defined in folder ./src
#ScriptGenerate(N,alpha_a,alpha_g,dim,NumSamples) -> generate files .sh to run in cluster
#JsonGenerate(N, alpha_a, alpha_g, dim)              -> generate files .json for entry in script
#text_terminal()                                    -> return .txt with text to run codes in cluster
#------------------------------------------------------------------------------------------

alpha_a = [11.25, 13.75, 15.75, 11.25, 11.5, 11.75, 15.25, 11.5, 11.75, 12.5, 13.25, 14.25, 14.25, 15.5, 11.25, 12.75, 13.25, 13.5, 13.75, 11.25, 12.75, 13.25, 14.25, 15.25, 11.25, 15.75, 13.25, 13.5, 13.75, 14.5, 14.5, 14.75, 11.25, 12.25, 13.75, 14.5, 15.25, 11.25, 12.25, 13.75, 11.5, 12.75, 11.75, 12.75, 14.25, 11.5, 13.25, 11.25, 13.75, 14.25, 15.25, 15.5, 11.25, 11.5, 13.5, 0.75, 1.25, 1.75, 2.25, 2.75, 4.25, 4.75, 5.25, 11.75, 12.75, 13.5, 14.75, 0.25, 0.75, 2.25, 3.25, 4.75, 5.25, 5.75, 13.75, 14.75, 15.25, 0.25, 0.75, 1.75, 2.25, 2.75, 3.25, 3.75, 4.25, 4.75, 5.75, 11.75, 14.25, 15.5, 0.25, 0.75, 1.25, 1.75, 2.25, 2.75, 3.25, 3.75, 4.25, 4.75, 5.75, 11.5, 12.25, 12.5, 14.5, 14.75, 14.75, 11.25, 12.5, 13.25, 14.5, 11.75, 12.5, 15.5, 11.5, 13.75, 14.5, 14.75, 0.5, 1.25, 1.5, 1.75, 2.5, 3.25, 4.25, 4.75, 5.5, 5.75, 11.75, 14.5, 0.25, 0.75, 1.25, 1.5, 1.75, 2.25, 2.5, 2.75, 3.25, 3.5, 3.75, 4.25, 4.5, 5.25, 14.5, 14.75, 0.75, 1.25, 1.5, 2.5, 2.75, 3.25, 3.5, 3.75, 4.25, 4.5, 4.75, 5.5, 14.5, 0.25, 0.5, 1.5, 2.5, 3.5, 3.75, 4.25, 4.5, 5.5, 5.75, 12.25, 12.5, 13.75, 14.25, 15.5, 15.75]
N = [5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 20000, 20000, 20000, 20000, 20000, 20000, 20000, 20000, 20000, 20000, 20000, 20000, 40000, 40000, 40000, 40000, 40000, 40000, 40000, 40000, 40000, 40000, 40000, 40000, 40000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 80000, 160000, 160000, 160000, 160000, 160000, 160000, 160000, 160000, 160000, 160000, 160000, 160000, 320000, 320000, 320000, 320000, 320000, 320000, 320000, 320000, 320000, 320000, 320000, 320000, 320000, 320000, 320000, 320000, 320000, 320000, 320000, 320000, 320000, 320000, 320000, 320000, 320000, 320000, 320000, 320000, 320000, 320000, 320000, 320000, 320000, 320000, 320000, 320000, 320000, 320000, 320000, 320000, 320000, 320000, 320000, 320000, 320000, 320000, 320000, 320000, 320000, 320000, 320000, 320000, 320000, 320000, 320000, 320000, 320000]
dim = [1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 4, 4, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 4, 4, 4, 4, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3, 4, 4, 1, 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 1, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
N_s = []

for i in range(len(N)):
    a = N[i]
    if(a==5000):
        N_s.append(20000)
    elif(a==10000):
        N_s.append(3200)
    elif(a==20000):
        N_s.append(700)
    elif(a==40000):
        N_s.append(500)
    elif(a==80000):
        N_s.append(200)
    elif(a==160000):
        N_s.append(30)
    elif(a==320000):
        N_s.append(15)

alpha_g = [2.0 for _ in range(len(alpha_a))]
for i in range(len(alpha_a)):
	FunctionsFile.JsonGenerate(N[i], alpha_a[i], 2.0, dim[i])
	FunctionsFile.ScriptGenerate(N[i], alpha_a[i],2.0 , dim[i], N_s[i])

FunctionsFile.text_terminal()